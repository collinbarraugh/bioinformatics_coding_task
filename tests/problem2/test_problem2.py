import sys
import os
my_absolute_dirpath = os.path.abspath(os.path.dirname('BIOINFORMATICS_CODING_TASK'))
sys.path.insert(1, my_absolute_dirpath + '/src/programs')

from problem2 import FASTAProcessor
import pandas as pd


def assert_top_sequences(file, top_n_sequences, sequence_list, sequence_counts):
    top_sequences = FASTAProcessor(file).top_sequences(top_n_sequences)
    i=0
    for sequence, count in  top_sequences.iterrows():
        assert sequence == sequence_list[i]
        assert count[0] == sequence_counts[i]
        i+=1

def test_top_sequences():
    assert_top_sequences(my_absolute_dirpath + '/sample_files/fasta/sample.fasta', 10, ['CGCGCAGGCTGAAGTAGTTACGCCCCTGTAAAGGAATCTATGGACAATGGAACGAACA','TGTTCTGAGTCAAATGATATTAACTATGCTTATCACATATTATAAAAGACCGTGGACATTCATCTTTAGTGTGTCTCCCTCTTCCTACT', 'CTCAATCTGCCAAGACCATAGATCCTCTCTTACTGTCAGCTCATCCGGTGAGGCC', 'CCTGTTGCTGACTCAAGACATTAGTGAGAAATAAGACTTCTGCGATGCTCACCACTGCAATTGCTCATGCAAAATTGCGTTTAACAGG', 'ATTGCGAATTCCGCCTGTGTCCCCCACACGAGCGTGAATCGTGGCTAGAAGTTCAGCCCCTCTTAGCACAGAGTGAG', 'TTTCAGCTGTCTTTTAAGCAGAAGCGATTTGTCCAACAAAAACAACGCTGTTTACGAA', 'TCACGCAGACAACGAACTGTGTCTGGATCAAAGACATCCGATAAGGCGATTCGTCTAGAAGGGTTACACAGTTGGGACCGGTAG', 'GACACAAACACCGTGGCTCAACCTAATCCTATTAGAGCCGAAAAGGCGAGGATGCTGATTGAGTAGGTATCTGGA', 'TGTGCAGAATATAATGTAAAAAAAACAGGACCCGGCTCTGTGCCGTTGGCCTGCGCGGTACTCATGTTAGTTTTCCGACTCCGACTTAT', 'TGCTTAAACTCATGATAGTCCCTGAGTAAACTGGTTGCGACACGGCTCCCG'], [28, 27, 22, 21, 17, 17, 8, 8, 5, 5])
    assert_top_sequences(my_absolute_dirpath + '/sample_files/fasta/sample.fasta', 5, ['CGCGCAGGCTGAAGTAGTTACGCCCCTGTAAAGGAATCTATGGACAATGGAACGAACA','TGTTCTGAGTCAAATGATATTAACTATGCTTATCACATATTATAAAAGACCGTGGACATTCATCTTTAGTGTGTCTCCCTCTTCCTACT', 'CTCAATCTGCCAAGACCATAGATCCTCTCTTACTGTCAGCTCATCCGGTGAGGCC', 'CCTGTTGCTGACTCAAGACATTAGTGAGAAATAAGACTTCTGCGATGCTCACCACTGCAATTGCTCATGCAAAATTGCGTTTAACAGG', 'ATTGCGAATTCCGCCTGTGTCCCCCACACGAGCGTGAATCGTGGCTAGAAGTTCAGCCCCTCTTAGCACAGAGTGAG'], [28, 27, 22, 21, 17])
    assert_top_sequences(my_absolute_dirpath + '/sample_files/fasta/sample.fasta', 1, ['CGCGCAGGCTGAAGTAGTTACGCCCCTGTAAAGGAATCTATGGACAATGGAACGAACA'], [28])

